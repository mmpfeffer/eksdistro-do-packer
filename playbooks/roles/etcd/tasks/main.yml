---
- name: Set certificate names for Kubernetes
  set_fact:
    certs:
      - name: kube-etcd
        alt_names:
          - "DNS:localhost"
          - "IP:127.0.0.1"
          - "IP:{{ ansible_eth1.ipv4.address }}"
        ext_usages:
          - clientAuth
          - serverAuth
        usages:
          - digitalSignature
          - keyEncipherment
      - name: kube-etcd-peer
        alt_names:
          - "DNS:localhost"
          - "IP:127.0.0.1"
          - "IP:{{ ansible_eth1.ipv4.address }}"
        ext_usages:
          - clientAuth
          - serverAuth
        usages:
          - digitalSignature
          - keyEncipherment
        

- name: Create private keys for EKS Distro ETCD
  openssl_privatekey:
    path: "/etc/kubernetes/pki/{{ item.name }}.key"
  loop: "{{ certs }}"

- name: Create CSR for EKS Distro CA
  openssl_csr:
    path: "/etc/kubernetes/pki/{{ item.name }}.csr"
    privatekey_path: "/etc/kubernetes/pki/{{ item.name }}.key"
    basic_constraints_critical: true
    basic_constraints:
      - "CA:FALSE"
    subject_alt_name: "{{ item.alt_names }}"
    key_usage: "{{ item.usages }}"
    extended_key_usage: "{{ item.ext_usages }}"
  loop: "{{ certs }}"


- name: Generate EKS Distro ETCD Certificate
  community.crypto.x509_certificate:
    path: "/etc/kubernetes/pki/{{ item.name }}.crt"
    csr_path: "/etc/kubernetes/pki/{{ item.name }}.csr"
    ownca_path: /etc/kubernetes/pki/ca.crt
    ownca_privatekey_path: /etc/kubernetes/pki/ca.key
    provider: ownca
  loop: "{{ certs }}"

- name: Create data directories
  file:
    path: /var/lib/etcd
    owner: root
    group: root
    mode: "0755"
    state: directory

- name: Generate ETCD Config file for container
  template:
    src: etcd.config.yml.j2
    dest: /var/lib/etcd/etcd.config.yml
    owner: root
    group: root
    mode: "0644"